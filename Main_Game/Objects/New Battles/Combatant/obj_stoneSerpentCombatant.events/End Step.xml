<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="2">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (!attackSelected)
{
    attackType = irandom(1);
    attackSelected = true;
}

if (attackType == 0)
{
    //if (player is not in the way)
    //{
        movementNumber=irandom(length);
    //} else
    //{
        //fire an ice ball and a fire ball at the player
    //}
    
    attackType = -1;
}

if (attackType == 1)
{
    numberOfShots = irandom(length/2);
    for (i=0; i&lt;numberOfShots; i+=1)
    {
        randomShot = irandom(1);
        shooter = irandom(length-1);
        
        /*fire projectile*/
        if (randomShot)
        {
            projectile = instance_create(-hdir*8*(shooter+1)+x+lengthdir_x(64,90*(image_index+3)),-vdir*8*(shooter+1)+y+lengthdir_y(64,90*(image_index+3)),obj_fireball);
            projectile.hspeed = lengthdir_x(16,90*(image_index+3));
            projectile.vspeed = lengthdir_y(16,90*(image_index+3));
        }
        
        /*ice projectile*/
        if (!randomShot)
        {
            projectile = instance_create(-hdir*8*(shooter+1)+x+lengthdir_x(64,90*(image_index+1)),-vdir*8*(shooter+1)+y+lengthdir_y(64,90*(image_index+1)),obj_iceball);
            projectile.hspeed = lengthdir_x(16,90*(image_index+1));
            projectile.vspeed = lengthdir_y(16,90*(image_index+1));
        }
    }
    
    attackType = -1;
}

if (instance_number(obj_fireball) == 0 &amp;&amp; instance_number(obj_iceball) == 0 &amp;&amp; movementNumber == 0 &amp;&amp; attackType == -1 &amp;&amp; hspeed == 0 &amp;&amp; vspeed == 0)
{
    attackCompleted = true;
}

if (changeBack)
{
    attackSelected = false;
    attackCompleted = false;
    changeBack = false;
    sprite_index = spr_bossStoneSerpentCollision;
    instance_change(obj_stoneSerpentIdle,false);
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
